name: renovate-reusable

on:
  workflow_call:
    inputs:
      app-id:
        type: number
        required: true
      branch-prefix:
        type: string
        default: renovate/
      dependency-dashboard-title:
        type: string
        default: Dependency Dashboard
      dry-run:
        type: string
        default: ${{ github.ref_name == github.event.repository.default_branch && 'null' || 'full' }}
      log-level:
        type: string
        default: debug
    secrets:
      private-key:
        required: true

env:
  RENOVATE_DRY_RUN: ${{ (!inputs.dry-run || inputs.dry-run == 'null' || inputs.dry-run == 'false') && 'null' || inputs.dry-run }}

jobs:
  run:
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/renovatebot/renovate:40.42.3@sha256:de4644ae20be68a74909fcf25572c8d38861f67e2f02adc6ab3d6e35b447256e
      options: -u 0:0 --init

    # If dry-run (github_ref != default branch):
    # - Run only for pull requests from the same repository (Renovate needs a real base branch anyway)
    # - Or events not related to pull requests
    # If not dry-run (github_ref == default branch):
    # - Pull requests: only from the same repository, from branches starting with branch-prefix, modified by non-author
    # - Issues: only with title matching dependency-dashboard-title, modified by non-author
    # - Or events not related to pull requests or issues
    # In short: if the event is related to a pull request or an issue, run only if the PR/issue is managed by
    # Renovate, and the event wasn't already caused by Renovate
    if: >-
      (
        (inputs.dry-run && inputs.dry-run != 'null' && inputs.dry-run != 'false') && (
          !github.event.pull_request ||
          github.event.repository.node_id == github.event.pull_request.head.repo.node_id
        )
      ) || (
        (!inputs.dry-run || inputs.dry-run == 'null' || inputs.dry-run == 'false') && (
          (
            !github.event.pull_request && !github.event.issue
          ) || (
            github.event.repository.node_id == github.event.pull_request.head.repo.node_id &&
            startsWith(github.head_ref, inputs.branch-prefix) &&
            github.event.sender.node_id != github.event.pull_request.user.node_id
          ) || (
            github.event.issue.title == inputs.dependency-dashboard-title &&
            github.event.sender.node_id != github.event.issue.user.node_id
          )
        )
      )

    # Should be at job level - so, hopefully, jobs that should be skipped won't queue and cancel other jobs
    concurrency:
      group: renovate${{ (inputs.dry-run && inputs.dry-run != 'null' && inputs.dry-run != 'false') && format('-{0}', github.ref) || '' }}
      cancel-in-progress: false

    steps:
      - run: |
          echo "RENOVATE_BASE_BRANCHES=${GITHUB_HEAD_REF:-${GITHUB_REF_NAME}}" >>"$GITHUB_ENV"
          echo "RENOVATE_USE_BASE_BRANCH_CONFIG=merge" >>"$GITHUB_ENV"
        if: env.RENOVATE_DRY_RUN != 'null' && github.ref_name != github.event.repository.default_branch

      - uses: octokit/request-action@v2.x
        id: workflow_run
        with:
          route: GET /repos/{owner}/{repo}/actions/runs/{run_id}
        env:
          GITHUB_TOKEN: ${{ github.token }}
          INPUT_OWNER: ${{ github.repository_owner }}
          INPUT_REPO: ${{ github.event.repository.name }}
          INPUT_RUN_ID: ${{ github.run_id }}

      - uses: actions/cache@v4
        with:
          path: cache
          key: renovate-${{ github.run_id }}
          restore-keys: renovate

      - id: token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ inputs.app-id }}
          private-key: ${{ secrets.private-key }}
          permission-checks: ${{ env.RENOVATE_DRY_RUN == 'null' && 'write' || 'read' }}
          permission-contents: ${{ env.RENOVATE_DRY_RUN == 'null' && 'write' || 'read' }}
          permission-workflows: ${{ env.RENOVATE_DRY_RUN == 'null' && 'write' || 'read' }}
          permission-statuses: ${{ env.RENOVATE_DRY_RUN == 'null' && 'write' || 'read' }}
          permission-issues: ${{ env.RENOVATE_DRY_RUN == 'null' && 'write' || 'read' }}
          permission-pull-requests: ${{ env.RENOVATE_DRY_RUN == 'null' && 'write' || 'read' }}
          permission-administration: read
          permission-vulnerability-alerts: read
          permission-members: read
          permission-metadata: read

      - run: |
          echo "$PROBLEM_MATCHER" >"$RUNNER_TEMP/problem-matcher.json"
          echo "::add-matcher::$RUNNER_TEMP/problem-matcher.json"
        env:
          PROBLEM_MATCHER: |
            {
              "problemMatcher": [
                {
                  "owner": "renovate-warn",
                  "severity": "warning",
                  "pattern": [{
                    "regexp": "^(?:\\\\x1b\\\\[[0-9;]*m?)?\\\\s*WARN(?:\\\\x1b\\\\[[0-9;]*m?)?:\\\\s*(.*)(?:$|\\\\x1b\\\\[[0-9;]*m?)",
                    "message": 1
                  }]
                },
                {
                  "owner": "renovate-error",
                  "severity": "error",
                  "pattern": [{
                    "regexp": "^(?:\\\\x1b\\\\[[0-9;]*m?)?\\\\s*ERROR(?:\\\\x1b\\\\[[0-9;]*m?)?:\\\\s*(.*)(?:$|\\\\x1b\\\\[[0-9;]*m?)",
                    "message": 1
                  }]
                }
              ]
            }

      - run: >-
          renovate
          "--branch-prefix=$RENOVATE_BRANCH_PREFIX"
          "--dependency-dashboard-title=$RENOVATE_DEPENDENCY_DASHBOARD_TITLE"
          "--dry-run=$RENOVATE_DRY_RUN"
          "$RENOVATE_REPOSITORIES"

        env:
          FORCE_COLOR: '2'
          LOG_LEVEL: ${{ inputs.log-level }}
          GITHUB_COM_TOKEN: ${{ steps.token.outputs.token }}
          RENOVATE_TOKEN: ${{ steps.token.outputs.token }}
          RENOVATE_REPOSITORIES: ${{ github.repository }}
          RENOVATE_BASE_DIR: ${{ github.workspace }}
          RENOVATE_CACHE_DIR: ${{ github.workspace }}/cache
          RENOVATE_BRANCH_PREFIX: ${{ inputs.branch-prefix }}
          RENOVATE_DEPENDENCY_DASHBOARD_TITLE: ${{ inputs.dependency-dashboard-title }}
          RENOVATE_PR_FOOTER: >-
            ${{ format('{0}/actions/workflows/{1}', github.event.repository.html_url, fromJSON(steps.workflow_run.outputs.data).path) }}
          RENOVATE_DEPENDENCY_DASHBOARD_FOOTER: >-
            ${{ format('{0}/actions/workflows/{1}', github.event.repository.html_url, fromJSON(steps.workflow_run.outputs.data).path) }}
